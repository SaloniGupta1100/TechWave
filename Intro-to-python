Intoduction to python

Pyhton is a popular programming language, created by Guido van Rossum and released in 1991.
It is used for web development(server side), software development, scientific mathematical computing and system scripting.


Applications

-Web development: Django, flask
-Game Development:Pysoy 3D game engine, PyGame:labrary for game development, Games such as Civilization-IV, Disney's Toon town Online, Vega Strike etc, have been built using python.
-Machine Learning and Artificial Intelligence: Pandas, Scikit-Learn, NumPy
-Data science and Data Visulization
-Desktop GUI Application
-Console Based Application
-Business Apllication
-Audio or Video Based Application
-3D CAD Applicatoion
-Enterprise Application
-Image Processing Application



Variables

Reserved memory locations to store values. Based on the data type of a variable, the interpreter allocates memory and decides what can be stored in the reserved memory.

  Rules for creating variables in python :-
  1. variable name must start with an underscore character or a letter.
  2. variable name cannot be started with a number.
  3. reserved words are not applicable to define name of the variable.
  4. variable name is case-sensitive.
  5. variable name can define sing the underscore, alpha-numeric characters and so on.


The multi-word keywords can be created by following method:
-Camel Case: ex- nameOfStudent, valueOfVariable, etc.
-Pascal Case: ex- NameOfStudent, etc
-Snake Case: ex- name_of_student, etc.


~There are two types of variables in python~
Local variables(declared inside the function) and Global Variables(can be used throughout the program)

Syntax :
       del <variable_name>
       
Local Variables:

def add():
  a,b=10,20
  print(a+b)
add()

Global Variable:

a=100
def add():
  global a
  print(a)
  a="Python"
  print(a)
add()
print(a)

Deleting a variable:

x=10
del x




Data Types

Python is dynamically typed language, hence we do not need gto define the type of the variable while declaring it.
examples: 
     x=str(10);
     y=int(10);
     z=float(10);

1. Numeric - Integer
           - Complex Number
           - Float
2. Dictionary
3. Boolean
4. Set
5. Sequence Type - Strings
                 - List
                 -  Tuple
                 
Python Data Types : List
  the list can contain data of different types. 
  The items stored in the list are separated with a comma (,) and enclosed within square brackets [].

Python Data Types : Tuple
  A tuple is similar to the list in many ways. Like lists, tuples also contain the collection of the items of different data types. 
  The items of the tuple are separated with a comma (,) and enclosed in parentheses ().
  A tuple is a read-only data structure as we can't modify the size and value of the items of a tuple.

Python Data Types : Dictionary 
  Dictionary is an unordered set of a key-value pair of items. 
  It is like an associative array or a hash table where each key stores a specific value. 
  Key can hold any primitive data type, whereas value is an arbitrary Python object.'''




Operators

-Arithmetic Operators
   
   print('Addition',10+20)
   print('Subtraction',20-10)
   print('Multiplication',2*2)
   print('Divide',20/2)
   print('Remainder',10%2)
   print('Exponent',2**2)
   print('floor division',20//6)

-Relational Operators

   a=100
   b=200
   print(a==b) 
   print(a!=b)
   print(a<=b)
   print(a>=b)
   print(a>b)
   print(a<b)

-Assignment Operators

   a=200
   a+=1 
   a-=1
   a*=2
   a%=2 
   a**=2
   a//=2


-Logical Operators

   a=10
   b=20
   if (a%2==0 and b%2==0):
     print('Even')
   else:
     print('odd')
   if (a==0 or b==0):
     print("Zero")
   else:
     print("Non-Zero")
   # If an expression a is true, then not (a) will be false and vice versa.
   if (not(a)):
     print("true")
   else:
     print("false") 


-Membership Operators

   Languages=["Python", "Java" ,"C++"]
   if ('Python' in Languages):
     print('TRUE')
   else:
     print('FALSE')
   if ('Python' not in Languages):
     print('TRUE')
   else:
     print('FALSE')

-Identify Operators
-Bitwise Operators



Taking input

variable_name = input ("input")



Conditionals 

1. #If Statement
   #The if statement is used to test a specific condition. If the condition is true, a block of code (if-block) will be executed.
   num = int(input("enter the number?"))  
   if num%2 == 0:  
       print("Number is even")  

2. # Multiple If statements
   a = int(input("Enter a? "));  
   b = int(input("Enter b? "));  
   c = int(input("Enter c? "));  
   if a>b and a>c:  
       print("a is largest");  
   if b>a and b>c:  
       print("b is largest");  
   if c>a and c>b:  
       print("c is largest");  

3. #The if-else statement provides an else block combined with the if statement which is executed in the false case of the condition.
   num = int(input("enter the number?"))  
   if num%2 == 0:  
       print("Number is even")  
   else :
       print("odd")

4. #The elif statement enables us to check multiple conditions 
   #and execute the specific block of statements depending upon the true condition among them.
   marks = int(input("Enter the marks? "))  
   if marks > 85 and marks <= 100:  
      print("Congrats ! you scored grade A ...")  
   elif marks > 60 and marks <= 85:  
      print("You scored grade B + ...")  
   elif marks > 40 and marks <= 60:  
      print("You scored grade B ...")  
   elif (marks > 30 and marks <= 40):  
      print("You scored grade C ...")  
   else:  
      print("Sorry you are fail ?")

5. # When the continue statement is encountered, the control transfer to the beginning of the loop. 
   # prints all letters except 'o' and 't'   
   i = 0  
   str1 = 'Python'  
  
   while i < len(str1):   
     if str1[i] == 'o' or str1[i] == 't':   
       i += 1  
       continue  
     else:
       print('Current Letter :', str1[i])
       i +=1

6. for
   a="hello"
   for i in range(len(a)-1,0,-1):
     print(a[i])




# Program to print table of given numbers.
i=1    
number=0    
b=9    
number = int(input("Enter the number:"))    
while i<=10:    
    print("%d X %d = %d \n"%(number,i,number*i))    
    i = i+1    

